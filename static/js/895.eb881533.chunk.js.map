{"version":3,"file":"static/js/895.eb881533.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exitingChildren.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\",\n    \"resolveKeyframes\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap)\n                            onTap(event, info);\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            onTapStart(event, info);\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel)\n            onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removeNonTranslationalTransform(element));\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n            }\n        }\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return this.resolveNoneKeyframes();\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        if (typeof unresolvedKeyframes[i] === \"string\" &&\n            unresolvedKeyframes[i] !== \"none\" &&\n            unresolvedKeyframes[i] !== \"0\") {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved)\n            flushKeyframeResolvers();\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        const { name, type, velocity, delay, onComplete, onUpdate } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.teardown();\n        const { onStop } = this.options;\n        onStop && onStop();\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, motionValue, name } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            duration = pregeneratedAnimation.duration;\n            this.options.times = pregeneratedAnimation.times;\n            this.options.ease = pregeneratedAnimation.ease;\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.18\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                fallbackAnimation[key] =\n                    fallbackTarget === undefined ? null : fallbackTarget;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart)\n                onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd)\n            onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        handler(event, info);\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd)\n                    onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a, _b;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_b = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom)) === null || _b === void 0 ? void 0 : _b[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.18\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.18 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","React","PopChild","_ref","id","useId","ref","nonce","useContext","MotionConfigContext","useInsertionEffect","_size$current","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","concat","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","_step","_iterator","_createForOfIteratorHelper","values","s","n","done","err","e","f","register","delete","undefined","forEach","_","PresenceContext","Map","getChildKey","child","AnimatePresence","_ref$initial","exitBeforeEnter","_ref$presenceAffectsL","_ref$mode","invariant","callback","forceRender","LayoutGroupContext","_useState","useState","_useState2","_slicedToArray","forcedRenderCount","setForcedRenderCount","useCallback","frame","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","updateChildLookup","clear","useEffect","map","_toConsumableArray","presentKeys","targetKeys","numPresent","length","i","indexOf","has","component","get","insertionIndex","exitingComponent","leftOverKeys","Array","from","keys","filter","childKey","includes","leftOverKey","presentChild","presentChildKey","splice","cloneElement","createContext","transformPagePoint","p","isStatic","reducedMotion","Queue","order","scheduled","Set","process","add","index","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","queue","cancel","remove","frameData","createRenderStep","processStep","stepId","processBatch","MotionGlobalConfig","performance","now","Math","max","min","wake","keepAlive","immediate","_createRenderBatcher","requestAnimationFrame","noop","cancelFrame","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","queueMicrotask","microtask","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","wantsHandoff","window","HandoffComplete","postRender","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","Fragment","renderedChildren","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","isTransitionDefined","when","delay","delayChildren","staggerChildren","staggerDirection","repeat","repeatType","repeatDelay","elapsed","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","_ref$repeatType","resolvedKeyframes","clearTime","time","newTime","isZeroValueString","isNumericalString","splitCSSVariableRegex","parseCSSVariable","match","exec","_match","token1","token2","fallback","getVariableValue","depth","_parseCSSVariable","_parseCSSVariable2","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","getValue","positionalValues","_ref3","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","measureInitialState","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","currentValue","valueAsRead","readValue","scheduleResolve","isColorString","testProp","splitColor","aName","bName","cName","_v$match","_v$match2","c","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","_analyseComplexValue","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","DOMKeyframesResolver","_KeyframeResolver","owner","_get","_getPrototypeOf","keyframe","resolveNoneKeyframes","_unresolvedKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","BaseAnimation","_ref$autoplay","autoplay","_ref$delay","_ref$type","_ref$repeat","_ref$repeatDelay","isStopped","updateFinishedPromise","_resolved","_this$options","onUpdate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","resolve","reject","currentFinishedPromise","then","Promise","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","findSpring","envelope","derivative","_ref$duration","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","initialGuess","result","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","_definition","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","createMixers","customMixer","mixers","mixerFactory","numMixers","easingFunction","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","_ref$ease","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","interpolate","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","_BaseAnimation","_ref$KeyframeResolver","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","onResolved","onKeyframesResolved","resolveKeyframes","keyframes$1","mapPercentToKeyframes","mirroredGenerator","_this$options2","_this$options2$type","_this$options2$repeat","_this$options2$repeat2","_this$options2$veloci","generatorFactory","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","_this$options$autopla","play","pause","sample","_this$options3","speed","timeWithoutDelay","isInDelayPhase","frameGenerator","currentIteration","floor","iterationProgress","isOddIteration","isAnimationFinished","finish","driver","newSpeed","hasChanged","resume","_this$options4","_this$options4$driver","onPlay","tick","teardown","onStop","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","supportsWaapi","memo","Element","acceleratedValues","AcceleratedAnimation","_this$options2$durati","requiresPregeneratedKeyframes","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","_excluded2","sampleTime","setWithVelocity","HTMLElement","animateMotionValue","isHandoff","valueTransition","_transition$elapsed","shouldSkip","supports","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","notify","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","endAnimation","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","setMotionValue","hasValue","addValue","setTarget","_ref$transitionEnd","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","_ref2$delay","transitionOverride","_targetAndTransition$","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animateChildren","_transition2","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","buildResolvedTypeValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","prevIsPresent","prevPresenceContext","exitAnimation","distance2D","xDelta","yDelta","PanSession","handlers","contextWindow","_ref$dragSnapToOrigin","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","pauseAnimation","stopAnimation","_this$getProps2","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps3","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","getAnimationState","_this$getProps4","panSession","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps8","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps9","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps10","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","_this5","dragKey","externalMotionValue","_this6","_projection$layout$la","_this7","_this$getProps11","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this7$constraints$ax","_this8","stopPointerListener","_this8$getProps","_this8$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","lockThreshold","DragGesture","removeGroupControls","controls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","read","clearSnapshot","removeLeadSnapshots","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","userAgentContains","string","navigator","userAgent","roundPoint","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig","skipAnimations","useManualTiming","any","useLayoutEffect"],"sourceRoot":""}